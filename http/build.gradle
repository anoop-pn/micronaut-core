plugins {
    id "io.micronaut.build.internal.convention-library"
    id "org.jetbrains.kotlin.jvm"
    id 'org.checkerframework' version '0.6.11'
}

apply plugin: 'org.checkerframework'

checkerFramework {
    checkers = [
            'org.checkerframework.checker.tainting.TaintingChecker',
            //'org.checkerframework.checker.tainting.TaintingChecker'
    ]
}

dependencies {
    annotationProcessor project(":inject-java")
    annotationProcessor project(":graal")
    api project(":context")
    api project(":core-reactive")
    implementation libs.managed.reactor
    compileOnly libs.kotlinx.coroutines.core
    compileOnly libs.kotlinx.coroutines.reactor

    compileOnly libs.managed.jackson.annotations

    testCompileOnly project(":inject-groovy")
    testAnnotationProcessor project(":inject-java")
    testImplementation project(":jackson-databind")
    testImplementation project(":inject")
    testImplementation project(":runtime")
    compileOnly 'org.checkerframework:checker-qual:3.26.0'
    testCompileOnly 'org.checkerframework:checker-qual:3.26.0'
    checkerFramework 'org.checkerframework:checker:3.26.0'
}

tasks.named("compileKotlin") {
    kotlinOptions.jvmTarget = "1.8"
}

//compileJava.options.fork = true
//compileJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']

spotless {
    java {
        targetExclude '**/io/micronaut/http/uri/QueryStringDecoder.java'
    }
}
