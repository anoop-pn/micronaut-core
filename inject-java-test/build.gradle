plugins {
    id "io.micronaut.build.internal.convention-library"
    id 'org.checkerframework' version '0.6.11'
}

apply plugin: 'org.checkerframework'

checkerFramework {
    checkers = [
            'org.checkerframework.checker.tainting.TaintingChecker',
            //'org.checkerframework.checker.tainting.TaintingChecker'
    ]
}

dependencies {
    annotationProcessor project(":inject-java")

    api project(":inject-java")
    api project(":context")
//    api "com.google.testing.compile:compile-testing:0.19", {
//        exclude group:'com.google.truth', module:'truth'
//    }
    api libs.managed.groovy
    api(libs.managed.spock) {
        exclude module:'groovy-all'
    }
    if (!JavaVersion.current().isJava9Compatible()) {
        api files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }
    api libs.jetbrains.annotations

    testAnnotationProcessor project(":inject-java")
    testCompileOnly project(":inject-groovy")
    testImplementation project(":jackson-databind")
    testImplementation libs.managed.validation
    testImplementation libs.javax.persistence
    testImplementation project(":runtime")
    testImplementation libs.javax.inject
    testImplementation libs.blaze.persistence.core
    testImplementation libs.smallrye
    compileOnly 'org.checkerframework:checker-qual:3.26.0'
    testCompileOnly 'org.checkerframework:checker-qual:3.26.0'
    checkerFramework 'org.checkerframework:checker:3.26.0'
}

tasks.named("sourcesJar") {
    from "$projectDir/src/main/groovy"
}
