plugins {
    id "io.micronaut.build.internal.convention-core-library"
    id 'org.checkerframework' version '0.6.11'
}

apply plugin: 'org.checkerframework'

checkerFramework {
    checkers = [
            'org.checkerframework.checker.tainting.TaintingChecker',
            //'org.checkerframework.checker.tainting.TaintingChecker'
    ]
}

micronautBuild {
    core {
        documented = false
        usesMicronautTestJunit()
    }

}

dependencies {
    compileOnly libs.javax.inject
    api libs.jakarta.inject.api
    api libs.managed.jakarta.annotation.api
    api project(':core')

    compileOnly libs.managed.snakeyaml
    compileOnly libs.managed.groovy
    compileOnly libs.kotlin.stdlib.jdk8
    compileOnly libs.managed.validation

//    testImplementation libs.managed.validation
    testImplementation project(":context")
    testImplementation project(":inject-groovy")
    testImplementation project(":inject-test-utils")
    testImplementation libs.systemlambda
    testImplementation libs.managed.snakeyaml
    testRuntimeOnly libs.junit.jupiter.engine
    compileOnly 'org.checkerframework:checker-qual:3.26.0'
    testCompileOnly 'org.checkerframework:checker-qual:3.26.0'
    checkerFramework 'org.checkerframework:checker:3.26.0'

}

tasks.withType(Test) {
    if(JavaVersion.current().majorVersion.toInteger() >= 17) {
        logger.warn("Opening java.util, so SystemLambda can work")
        jvmArgs += ['--add-opens', 'java.base/java.util=ALL-UNNAMED']
    }
}
