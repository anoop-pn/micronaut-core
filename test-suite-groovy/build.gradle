plugins {
    id "io.micronaut.build.internal.convention-test-library"
    id 'org.checkerframework' version '0.6.11'
}

apply plugin: 'org.checkerframework'

checkerFramework {
    checkers = [
            'org.checkerframework.checker.tainting.TaintingChecker',
            //'org.checkerframework.checker.tainting.TaintingChecker'
    ]
}

micronautBuild {
    core {
        usesMicronautTestJunit()
        usesMicronautTestSpock()
    }
}

dependencies {
    testImplementation libs.managed.netty.codec.http
    testImplementation project(":http-client")
    testImplementation project(":inject-groovy")
    testImplementation project(":http-server-netty")
    testImplementation project(":jackson-databind")
    testImplementation project(":runtime")
    testImplementation project(":validation")
    testImplementation project(":inject")
    testImplementation project(":management")
    testImplementation project(":session")
    testImplementation libs.managed.jcache
    testImplementation libs.managed.groovy.sql
    testImplementation libs.managed.groovy.templates
    testImplementation libs.managed.groovy.json
    testImplementation libs.logbook.netty
    testImplementation project(":function-client")
    testImplementation project(":function-web")
    testRuntimeOnly(platform(libs.boms.micronaut.aws))
    testRuntimeOnly libs.aws.java.sdk.lambda
    testRuntimeOnly libs.bcpkix

    testImplementation libs.managed.reactor
    compileOnly 'org.checkerframework:checker-qual:3.26.0'
    testCompileOnly 'org.checkerframework:checker-qual:3.26.0'
    checkerFramework 'org.checkerframework:checker:3.26.0'
}

//compileTestGroovy.groovyOptions.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
